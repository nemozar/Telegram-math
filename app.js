// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
const tg = window.Telegram.WebApp;
tg.expand();

// –≠–ª–µ–º–µ–Ω—Ç—ã DOM
const startBtn = document.getElementById('startBtn');
const practiceBtn = document.getElementById('practiceBtn');
const gameArea = document.getElementById('gameArea');
const questionEl = document.getElementById('question');
const answerInput = document.getElementById('answerInput');
const submitBtn = document.getElementById('submitBtn');
const nextBtn = document.getElementById('nextBtn');
const resultEl = document.getElementById('result');
const statsEl = document.getElementById('stats');
const modeInfo = document.getElementById('modeInfo');

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–≥—Ä—ã
let a = 0;
let b = 0;
let correctAnswer = 0;
let isTestMode = false;
let correctCount = 0;
let totalCount = 0;
let questions = [];

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
function initQuestions() {
    questions = [];
    for (let i = 1; i <= 10; i++) {
        for (let j = 1; j <= 10; j++) {
            questions.push({a: i, b: j});
        }
    }
    shuffleArray(questions);
}

// –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞
function shuffleArray(array) {
    for (let i = array.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [array[i], array[j]] = [array[j], array[i]];
    }
}

// –ù–∞—á–∞–ª–æ —Ç–µ—Å—Ç–∞
startBtn.addEventListener('click', () => {
    isTestMode = true;
    correctCount = 0;
    totalCount = 0;
    initQuestions();
    gameArea.style.display = 'block';
    modeInfo.textContent = '–†–µ–∂–∏–º: –¢–µ—Å—Ç (20 —Å–ª—É—á–∞–π–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤)';
    nextQuestion();
});

// –ù–∞—á–∞–ª–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
practiceBtn.addEventListener('click', () => {
    isTestMode = false;
    correctCount = 0;
    totalCount = 0;
    initQuestions();
    gameArea.style.display = 'block';
    modeInfo.textContent = '–†–µ–∂–∏–º: –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ (–±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã)';
    nextQuestion();
});

// –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å
function nextQuestion() {
    if (isTestMode && totalCount >= 20) {
        endTest();
        return;
    }
    
    answerInput.value = '';
    resultEl.textContent = '';
    resultEl.className = 'result';
    submitBtn.style.display = 'block';
    nextBtn.style.display = 'none';
    answerInput.focus();
    
    if (isTestMode) {
        // –í —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ –±–µ—Ä–µ–º –≤–æ–ø—Ä–æ—Å—ã –ø–æ –ø–æ—Ä—è–¥–∫—É –∏–∑ –ø–µ—Ä–µ–º–µ—à–∞–Ω–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞
        const question = questions[totalCount];
        a = question.a;
        b = question.b;
    } else {
        // –í —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω–æ–º —Ä–µ–∂–∏–º–µ - –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–ª—É—á–∞–π–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
        a = Math.floor(Math.random() * 10) + 1;
        b = Math.floor(Math.random() * 10) + 1;
    }
    
    correctAnswer = a * b;
    questionEl.textContent = `${a} √ó ${b} = ?`;
    
    if (!isTestMode) {
        updateStats();
    }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞
submitBtn.addEventListener('click', checkAnswer);
answerInput.addEventListener('keypress', (e) => {
    if (e.key === 'Enter') {
        checkAnswer();
    }
});

function checkAnswer() {
    const userAnswer = parseInt(answerInput.value);
    
    if (isNaN(userAnswer)) {
        resultEl.textContent = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ';
        resultEl.className = 'result incorrect';
        return;
    }
    
    totalCount++;
    
    if (userAnswer === correctAnswer) {
        resultEl.textContent = '–ü—Ä–∞–≤–∏–ª—å–Ω–æ! üëç';
        resultEl.className = 'result correct';
        correctCount++;
    } else {
        resultEl.textContent = `–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: ${correctAnswer}`;
        resultEl.className = 'result incorrect';
    }
    
    submitBtn.style.display = 'none';
    nextBtn.style.display = 'block';
    
    updateStats();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
function updateStats() {
    if (isTestMode) {
        statsEl.textContent = `–í–æ–ø—Ä–æ—Å ${totalCount} –∏–∑ 20 | –ü—Ä–∞–≤–∏–ª—å–Ω–æ: ${correctCount}`;
    } else {
        statsEl.textContent = `–í—Å–µ–≥–æ –≤–æ–ø—Ä–æ—Å–æ–≤: ${totalCount} | –ü—Ä–∞–≤–∏–ª—å–Ω–æ: ${correctCount}`;
    }
}

// –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞
function endTest() {
    gameArea.style.display = 'none';
    const percentage = Math.round((correctCount / 20) * 100);
    modeInfo.innerHTML = `
        <h2>–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!</h2>
        <p>–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: ${correctCount} –∏–∑ 20</p>
        <p>–†–µ–∑—É–ª—å—Ç–∞—Ç: ${percentage}%</p>
        <p>${getTestComment(percentage)}</p>
    `;
}

// –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É —Ç–µ—Å—Ç–∞
function getTestComment(percentage) {
    if (percentage === 100) return '–û—Ç–ª–∏—á–Ω–æ! –¢—ã –∑–Ω–∞–µ—à—å —Ç–∞–±–ª–∏—Ü—É —É–º–Ω–æ–∂–µ–Ω–∏—è –Ω–∞ 5+!';
    if (percentage >= 80) return '–•–æ—Ä–æ—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –ü—Ä–æ–¥–æ–ª–∂–∞–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è!';
    if (percentage >= 50) return '–ù–µ–ø–ª–æ—Ö–æ, –Ω–æ –Ω—É–∂–Ω–æ –µ—â–µ –ø–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è';
    return '–¢–µ–±–µ –Ω—É–∂–Ω–æ —Å–µ—Ä—å–µ–∑–Ω–æ –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ —Ç–∞–±–ª–∏—Ü–µ–π —É–º–Ω–æ–∂–µ–Ω–∏—è';
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å"
nextBtn.addEventListener('click', nextQuestion);
